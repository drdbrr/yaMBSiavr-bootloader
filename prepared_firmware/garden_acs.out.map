Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega328p.o (exit)
/usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
                              main.o (__tablejump2__)
/usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
                              main.o (__prologue_saves__)
/usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
                              main.o (__epilogue_restores__)

Allocating common symbols
Common symbol       size              file

internalRegisters   0x14              main.o
holdingRegisters    0x28              main.o
inputRegisters      0x8               main.o
rxbuffer            0x100             main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega328p.o
LOAD main.o
LOAD yaMBSiavr.o
LOAD twi_master/twi_master.o
START GROUP
LOAD /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libatmega328p.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1300
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
 .text          0x00000000000000a6      0x1fc main.o
                0x00000000000000a6                timer0100us_start
                0x00000000000000b8                SetOuts
                0x000000000000013c                ReadIns
                0x0000000000000164                io_conf
                0x0000000000000176                __vector_16
                0x00000000000001be                modbusGet
                0x0000000000000284                software_reset
 .text          0x00000000000002a2      0x676 yaMBSiavr.o
                0x00000000000002a2                modbusGetBusState
                0x00000000000002a8                modbusGetAddress
                0x00000000000002ae                modbusSetAddress
                0x00000000000002b4                crc16
                0x000000000000032c                listRegisterCopy
                0x000000000000034c                listBitCopy
                0x00000000000003a6                modbusReset
                0x00000000000003b6                modbusTickTimer
                0x0000000000000440                __vector_18
                0x0000000000000526                __vector_19
                0x00000000000005aa                __vector_20
                0x00000000000005f2                modbusInit
                0x0000000000000616                modbusSendMessage
                0x0000000000000650                modbusSendException
                0x0000000000000664                modbusRequestedAmount
                0x000000000000066e                modbusRequestedAddress
                0x0000000000000678                intToModbusRegister
                0x0000000000000698                modbusRegisterToInt
                0x00000000000006c2                modbusExchangeRegisters
                0x00000000000007c4                modbusExchangeBits
 .text          0x0000000000000918      0x68a twi_master/twi_master.o
                0x0000000000000918                twi_master_init
                0x0000000000000924                twi_master_start
                0x000000000000095a                twi_master_stop
                0x0000000000000962                twi_master_write
                0x00000000000009a0                twi_master_read
                0x00000000000009e6                twi_master_write_page
                0x0000000000000a90                twi_master_read16_reg8
                0x0000000000000b38                twi_master_read16_reg16
                0x0000000000000c06                twi_master_write16_reg8
                0x0000000000000c8e                twi_master_write16_reg16
                0x0000000000000d30                twi_master_write_reg8
                0x0000000000000d94                twi_master_write_reg16
                0x0000000000000e12                twi_master_read_reg8
                0x0000000000000eac                twi_master_read_reg16
 .text          0x0000000000000fa2        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000fa2        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text          0x0000000000000fa2        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000fa2        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000fa2        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
 .text          0x0000000000000fa2        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
                0x0000000000000fa2                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000fa2      0x2e0 main.o
                0x0000000000000fa2                main
 .text.libgcc.mul
                0x0000000000001282        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001282        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001282        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001282        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001282        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001282        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000001282        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001282        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x0000000000001282        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc   0x0000000000001282        0xc /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
                0x0000000000001282                __tablejump2__
 .text.libgcc.prologue
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
 .text.libgcc   0x000000000000128e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x000000000000128e       0x38 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
                0x000000000000128e                __prologue_saves__
 .text.libgcc.builtins
                0x00000000000012c6        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x00000000000012c6        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
 .text.libgcc.fixed
                0x00000000000012c6        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x00000000000012c6        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x00000000000012c6        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc   0x00000000000012c6        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x00000000000012c6       0x36 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
                0x00000000000012c6                __epilogue_restores__
 .text.libgcc.builtins
                0x00000000000012fc        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x00000000000012fc        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.fixed
                0x00000000000012fc        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
                0x00000000000012fc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000012fc        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
                0x00000000000012fc                exit
                0x00000000000012fc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000012fc        0x4 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000001300                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000001300                _etext = .

.data           0x0000000000800100        0x8 load address 0x0000000000001300
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .data          0x0000000000800100        0x7 main.o
                0x0000000000800100                application_crc_expected_index
                0x0000000000800102                ic_addr
                0x0000000000800103                mem_addr1
                0x0000000000800105                mem_addr
 .data          0x0000000000800107        0x1 yaMBSiavr.o
                0x0000000000800107                PacketTopIndex
 .data          0x0000000000800108        0x0 twi_master/twi_master.o
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800108        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800108                . = ALIGN (0x2)
                0x0000000000800108                _edata = .
                0x0000000000800108                PROVIDE (__data_end, .)

.bss            0x0000000000800108      0x14d
                0x0000000000800108                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .bss           0x0000000000800108        0x2 main.o
                0x0000000000800108                outstate
                0x0000000000800109                instate
 .bss           0x000000000080010a        0x7 yaMBSiavr.o
                0x000000000080010a                Address
                0x000000000080010b                modBusStaMaStates
                0x000000000080010c                modbusTimer
                0x000000000080010e                BusState
                0x000000000080010f                DataPos
 .bss           0x0000000000800111        0x0 twi_master/twi_master.o
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_tablejump2.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_prologue.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_epilogue.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800111      0x144 main.o
                0x0000000000800111                internalRegisters
                0x0000000000800125                holdingRegisters
                0x000000000080014d                inputRegisters
                0x0000000000800155                rxbuffer
                0x0000000000800255                PROVIDE (__bss_end, .)
                0x0000000000001300                __data_load_start = LOADADDR (.data)
                0x0000000000001308                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800255        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800255                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x32d0
 *(.stab)
 .stab          0x0000000000000000      0xf6c main.o
 .stab          0x0000000000000f6c     0x1368 yaMBSiavr.o
                                       0x1524 (size before relaxing)
 .stab          0x00000000000022d4      0xffc twi_master/twi_master.o
                                       0x11b8 (size before relaxing)

.stabstr        0x0000000000000000     0x195a
 *(.stabstr)
 .stabstr       0x0000000000000000     0x195a main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x22
 *(.comment)
 .comment       0x0000000000000000       0x22 main.o
                                         0x23 (size before relaxing)
 .comment       0x0000000000000022       0x23 yaMBSiavr.o
 .comment       0x0000000000000022       0x23 twi_master/twi_master.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.avr.prop       0x0000000000000000       0x16
 .avr.prop      0x0000000000000000       0x16 main.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(garden_acs.out elf32-avr)
LOAD linker stubs
